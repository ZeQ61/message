# PostgreSQL Ayarlar?
spring.datasource.url=jdbc:postgresql://ep-noisy-sun-a4cqyref-pooler.us-east-1.aws.neon.tech:5432/neondb?sslmode=require
spring.datasource.username=neondb_owner
spring.datasource.password=npg_06XRnqjNpVvk

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

server.port=8080

# Cloudinary Ayarları
# TODO: Aşağıdaki değerleri Cloudinary hesabınızdan alacağınız gerçek değerlerle değiştirin
# Bu değerler Cloudinary kontrol panelinden alınabilir: https://cloudinary.com/console
# application.properties
cloudinary.cloud_name=dfbmfr9rv
cloudinary.api_key=724539157922731
cloudinary.api_secret=nQdkWuONR52mYQgabK8ti2CUFeo

# JWT Ayarları
jwt.secret=640d8cfe8f781e288ec0380f1379de15914e300538c12d7bc5bd881ddae72fbe6111a5f3164e1f3bbf071d106dd7eb1e15374d74179a13d22126031f598e06e79102f4ea03540cc97e054304dafa0a0d0d3dc0bc98d4cbc5c3faff4b2a914d8e5a9ece7ac95502c6f11021493498a4debdaf2c7ea1f13d1d5546c877f54ea007f6e41313d048105c525a8116dfe8c0cd65d9d6a6a2d565090c7a56d4cbec045cfd9c5d242cb9a7f26eaa94a4e908a14dabf869872433202c608e1bab421cb6b78cc5143c42a2d6a4ead635fa3400ffec4a590c82c07c69f78f8c38d5bac300dc6df55d05bef7c30e31f51285a81f2ea978e2e35d99aa8632255f5880fb45654d
jwt.expiration=36000000

# Mesaj şifreleme anahtarı (AES-256 için)
encryption.secret=this-is-a-very-secure-encryption-key-for-chat-app-messages

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# Dosya yükleme ayarları
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Dosya yükleme dizini - tam bir yol olarak belirle
file.upload-dir=./uploads/images

# Statik dosyaların sunulması için
spring.web.resources.static-locations=file:./uploads/,classpath:/static/
spring.mvc.static-path-pattern=/resources/**

# Bean çakışmasını önlemek için aşağıdaki ayarı etkinleştiriyoruz
spring.main.allow-bean-definition-overriding=true

# Logları artır
logging.level.org.springframework.web=DEBUG
logging.level.com.example.chatapp=DEBUG

# Redis konfigürasyonu
# Üretim ortamında gerçek Redis sunucu bilgilerini kullanın
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.database=0

# WebSocket mesajlarının Redis üzerinden dağıtılmasını etkinleştir
spring.session.store-type=redis
# Oturum süresini 24 saat olarak ayarla
spring.session.timeout=86400

# Servis adı/tanımlayıcısı - her servis instance'ı için benzersiz olmalı
app.instance-id=${random.uuid}





